name: Deploy to Production

on:
  push:
    branches:
      - main
  workflow_dispatch: {}

jobs:
  deploy:
    runs-on: ubuntu-latest
    name: Deploy
    environment: production
    env:
      CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
    steps:
      - uses: actions/checkout@v4
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm
      - name: Install Packages
        run: npm ci
      - name: Modify wrangler.toml
        run: sed -i s/'${SLACK_BOT_KV_ID}'/"${SLACK_BOT_KV_ID}"/g wrangler.toml
        env:
          SLACK_BOT_KV_ID: ${{ secrets.SLACK_BOT_KV_ID }}
      - name: Deploy slack-webhooks
        run: |
          npx wrangler deploy \
            src/workers/${{ env.WORKER_NAME }}.ts \
            --name ${{ env.WORKER_NAME }} \
            --keep-vars \
            --minify
        env:
          WORKER_NAME: slack-webhooks
      - name: Deploy greet-start-batch
        run: |
          npx wrangler deploy \
            src/workers/${{ env.WORKER_NAME }}.ts \
            --name ${{ env.WORKER_NAME }} \
            --keep-vars \
            --minify
        env:
          WORKER_NAME: greet-start-batch
      - name: Deploy greet-end-batch
        run: |
          npx wrangler deploy \
            src/workers/${{ env.WORKER_NAME }}.ts \
            --name ${{ env.WORKER_NAME }} \
            --keep-vars \
            --minify
        env:
          WORKER_NAME: greet-end-batch
      - name: Deploy generate-sheet-batch
        run: |
          npx wrangler deploy \
            src/workers/${{ env.WORKER_NAME }}.ts \
            --name ${{ env.WORKER_NAME }} \
            --keep-vars \
            --minify
        env:
          WORKER_NAME: generate-sheet-batch
